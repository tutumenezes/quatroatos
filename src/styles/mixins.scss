// ** mixins.scss  **

// MEDIA QUERIES
//still not optimized for tablet viewports, meaning it will render just like the mobile version
@mixin mobile {
  @media (min-width: 0) and (max-width: #{$tablet-width - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

// THEMING AND DARKMODE

@mixin themed() {
  @each $theme, $map in $themes {
    [data-theme='#{$theme}'] & {
      $theme-map: () !global;
      @each $key, $submap in $map {
        $value: map-get(map-get($themes, $theme), '#{$key}');
        $theme-map: map-merge(
          $theme-map,
          (
            $key: $value,
          )
        ) !global;
      }
      @content;
      $theme-map: null !global;
    }
  }
}

@function t($key) {
  @return map-get($theme-map, $key);
}

//ANIMATION AND KEYFRAMES
@mixin animate($animation, $duration, $method, $times) {
  animation: $animation $duration $method $times;
}

@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
}

// USE EXAMPLE:

// @include keyframes(fade){
//   0%{
//   opacity: 1;
//   }
//  50%{
//   opacity: 0.5;
//   }
//  100%{
//   opacity: 0;
//  }
// }
// @include animate(fade, 1s, linear, 1);
